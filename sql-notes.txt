SELECT population FROM world
  WHERE name = 'Germany'

SELECT name, population FROM world
  WHERE name IN ('Sweden', 'Norway','Denmark');

SELECT name, area FROM world
  WHERE area BETWEEN 200000 and 250000                           // BETWEEN is inclusive

SELECT name, continent, population FROM world

SELECT name FROM world
WHERE population >= 200000000

SELECT name, gdp/population FROM world WHERE population>=200000000

SELECT name, population/1000000 FROM world WHERE continent='South America'

SELECT name, population FROM world WHERE name IN ('France', 'Germany', 'Italy')

SELECT name FROM world WHERE name LIKE 'United%'

SELECT name,population,area FROM world WHERE area > 3000000
OR population > 250000000

SELECT name,population,area FROM world WHERE area > 3000000
XOR population > 250000000

// ROUND(f,p) returns f rounded to p decimal places .

ROUND(7253.86, 0)    ->  7254
ROUND(7253.86, 1)    ->  7253.9
ROUND(7253.86,-3)    ->  7000

SELECT name, ROUND(population/1000000,2), ROUND(gdp/1000000000,2) FROM world WHERE continent = 'South America'

SELECT name, ROUND(gdp/population, -3) FROM world WHERE gdp >= 1000000000000	

SELECT name, capital
  FROM world
 WHERE LENGTH(name)=LENGTH(capital)


// LEFT('Hello world', 4) -> 'Hell'  
// <> (Not Equals)

SELECT name, capital
FROM world WHERE LEFT(name,1)=LEFT(capital,1) AND name <> capital

SELECT name FROM world WHERE name LIKE '%a%'
AND name LIKE '%e%'
AND name LIKE '%i%'
AND name LIKE '%o%'
AND name LIKE '%u%'
AND name NOT LIKE '% %'


SELECT name,LEFT(name, 3)FROM bbc

SELECT name,RIGHT(name, 3) FROM bbc

SELECT name,SUBSTRING(name, 2, 5) FROM bbc

SELECT name,TRIM(name) FROM bbc                                         // leading and trailing spaces removed

SELECT name,POSITION('an' IN name) FROM bbc

SELECT name,ROUND(population/1000000,3) FROM bbc

SELECT name,FLOOR(population/1000000) FROM bbc

SELECT population/1000000 AS a,CEIL(population/1000000) AS b FROM bbc

SELECT MOD(yr,10),yr, city FROM games

SELECT yr AS year, subject FROM nobel WHERE winner = 'Albert Einstein'

SELECT * FROM nobel WHERE (subject = 'Physics' AND yr = 1980) OR (subject = 'Chemistry' AND yr = 1984)

SELECT * FROM nobel WHERE subject NOT IN ('Chemistry', 'Medicine') AND yr = 1980

SELECT * FROM nobel WHERE winner = 'EUGENE O\'NEILL'                       // '\' to ignore preceeding character

SELECT winner,yr,subject FROM nobel WHERE winner LIKE 'Sir%' ORDER BY yr DESC,winner

SELECT winner, subject FROM nobel WHERE yr=1984
ORDER BY subject IN ('Physics','Chemistry'),subject,winner

SELECT name FROM world WHERE population > (SELECT population FROM world WHERE name='Russia')

SELECT name FROM world WHERE continent = 'Europe' AND gdp/population > (SELECT gdp/population FROM world WHERE name = 'United Kingdom')

SELECT name, continent FROM world
WHERE continent IN (SELECT continent FROM world WHERE name IN ('Argentina','Australia'))
ORDER BY name

SELECT name, 
CONCAT((ROUND((population/(SELECT population FROM world WHERE name ='Germany'))*100,0)),'%') AS percentage 
FROM world WHERE continent = 'Europe'

SELECT name FROM world WHERE gdp > ALL (SELECT gdp FROM world WHERE continent = 'Europe' AND gdp>0)

SELECT continent, name, area FROM world x WHERE area >= ALL (SELECT area FROM world y WHERE y.continent=x.continent AND area>0) 

SELECT continent, name FROM world x WHERE name <= ALL (SELECT name FROM world y WHERE y.continent=x.continent)

SELECT name, continent, population FROM world x WHERE 
25000000 >= ALL (SELECT population FROM world y WHERE y.continent=x.continent AND population>0)

SELECT name, continent FROM  world x WHERE 
population > ALL(SELECT population*3 FROM world y WHERE y.continent=x.continent AND y.name!=x.name) 

SELECT continent, COUNT(name) FROM world GROUP BY continent

SELECT continent, SUM(population) FROM world GROUP BY continent

SELECT continent, COUNT(name)
FROM world
WHERE population >= 200000000
GROUP BY continent

SELECT continent, SUM(population)
FROM world
GROUP BY continent
HAVING SUM(population)>500000000


SELECT SUM(population) FROM world

SELECT DISTINCT continent FROM world

SELECT SUM(gdp) FROM world WHERE continent = 'Africa'

SELECT COUNT(name) FROM world WHERE area >= 1000000

SELECT SUM(population) FROM world WHERE name IN ('Estonia', 'Latvia', 'Lithuania')

SELECT continent, COUNT(name) FROM world GROUP BY continent

SELECT continent, COUNT(name) FROM world 
WHERE population >= 10000000
GROUP BY continent 

SELECT continent FROM world 
GROUP BY continent 
HAVING SUM(population) >= 100000000

SELECT matchid, player FROM goal WHERE teamid = 'GER'

SELECT id,stadium,team1,team2 FROM game WHERE id = 1012

SELECT  player, teamid, stadium, mdate FROM game JOIN goal ON (id=matchid) WHERE teamid = 'GER'

SELECT team1, team2, player FROM game JOIN goal ON (id=matchid) WHERE player LIKE 'Mario%'

SELECT player, teamid, coach, gtime
FROM goal JOIN eteam
ON teamid = id 
WHERE gtime<=10

SELECT mdate, teamname FROM game JOIN eteam ON (team1=eteam.id) WHERE coach = 'Fernando Santos'

SELECT player FROM game JOIN goal ON (id=matchid) WHERE stadium = 'National Stadium, Warsaw'

SELECT DISTINCT player FROM game JOIN goal ON matchid = id WHERE (team1='GER' OR team2='GER') AND teamid!='GER'

SELECT teamname, COUNT(player) FROM eteam JOIN goal ON id=teamid GROUP BY teamname

SELECT stadium, COUNT(matchid) FROM game JOIN goal ON (id=matchid) GROUP BY stadium

SELECT id, mdate, COUNT(matchid)
FROM game JOIN goal ON (id = matchid)
WHERE (team1 = 'POL' OR team2 = 'POL')
GROUP BY matchid


SELECT id, mdate, COUNT(matchid) FROM game JOIN goal ON (id = matchid) WHERE teamid = 'GER' GROUP BY matchid

SELECT mdate, 
       team1,
       SUM(CASE WHEN teamid = team1 THEN 1 ELSE 0 END) AS score1,
       team2,
       SUM(CASE WHEN teamid = team2 THEN 1 ELSE 0 END) AS score2 FROM
game LEFT JOIN goal ON (id = matchid)
GROUP BY mdate,team1,team2
ORDER BY mdate, matchid, team1, team2



SELECT id, title
FROM movie
WHERE yr=1962


SELECT yr FROM movie
WHERE title = 'Citizen Kane'

SELECT id, title, yr 
FROM movie
WHERE title LIKE '%Star Trek%'
ORDER BY yr


SELECT id
FROM actor
WHERE name = 'Glenn Close'



SELECT id FROM movie WHERE title = 'Casablanca'



SELECT name FROM casting JOIN actor ON (actorid = id) WHERE 
movieid = 11768



SELECT name
FROM actor
JOIN casting ON (id=actorid AND movieid = (SELECT id FROM movie WHERE title = 'Alien'))


SELECT title FROM movie JOIN casting ON (id = movieid
AND actorid = (SELECT id FROM actor WHERE name ='Harrison Ford')) 


SELECT title FROM movie JOIN casting ON (id = movieid
AND actorid = (SELECT id FROM actor WHERE name ='Harrison Ford') AND ord > 1) 



SELECT title, name FROM 
movie JOIN casting ON (movie.id  = movieid) 
      JOIN actor ON (actorid = actor.id)
WHERE ord=1 AND yr = 1962



SELECT yr,COUNT(title) FROM
movie JOIN casting ON movie.id=movieid
      JOIN actor   ON actorid=actor.id
WHERE name='Rock Hudson'
GROUP BY yr
HAVING COUNT(title) > 2


SELECT title, name FROM movie JOIN casting ON 
(id = movieid AND ord = 1) 
JOIN actor ON (actor.id = actorid) WHERE movie.id IN
(SELECT movieid FROM casting WHERE actorid =
(SELECT id FROM actor WHERE name = 'Julie Andrews'))




SELECT name 
FROM actor JOIN casting ON (actor.id = actorid)
WHERE ord = 1
GROUP BY name
HAVING count(movieid) >= 15
ORDER BY name



SELECT title, COUNT(actorid) FROM movie JOIN casting 
ON (movie.id = casting.movieid)
WHERE yr = '1978'
GROUP BY title
ORDER BY COUNT(actorid) DESC, title




SELECT name FROM actor JOIN casting ON (id = actorid) 
WHERE movieid IN
(SELECT movieid FROM casting WHERE actorid =
(SELECT id FROM actor WHERE name = 'Art Garfunkel'))
AND name != 'Art Garfunkel'




// COALESCE can be useful when you want to replace a NULL value with some other value.


SELECT name, party
,COALESCE(party,'None') AS aff
FROM msp WHERE name LIKE 'C%'


SELECT COUNT(id) FROM stops

SELECT id FROM stops WHERE name = 'Craiglockhart'

SELECT id, name FROM route JOIN stops ON (id = stop)
WHERE num = '4' AND company = 'LRT'


SELECT company, num, COUNT(*)
FROM route WHERE stop=149 OR stop=53
GROUP BY company, num
HAVING COUNT(*) = 2



SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
WHERE a.stop=53 AND b.stop = 149


SELECT a.company, a.num, stopa.name, stopb.name
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart'AND stopb.name = 'London Road'



SELECT DISTINCT a.company,  a.num 
FROM route a JOIN route b ON 
(a.num = b.num AND a.company = b.company)
WHERE a.stop = 115 AND b.stop = 137



SELECT DISTINCT a.company, a.num 
FROM route a JOIN route b
ON (a.num  = b.num AND a.company = b.company)
JOIN stops stopa ON (a.stop = stopa.id)
JOIN stops stopb ON (b.stop = stopb.id)
WHERE stopa.name = 'Craiglockhart' AND stopb.name = 'Tollcross'




SELECT DISTINCT stopb.name, a.company, a.num FROM route a JOIN route b
ON (a.num = b.num AND a.company = b.company)
JOIN stops stopa ON (a.stop = stopa.id)
JOIN stops stopb ON (b.stop = stopb.id)
WHERE stopa.name = 'Craiglockhart'





SELECT DISTINCT a.num, a.company, stopb.name ,  c.num,  c.company
FROM route a JOIN route b
ON (a.company = b.company AND a.num = b.num)
JOIN ( route c JOIN route d ON (c.company = d.company AND c.num= d.num))
JOIN stops stopa ON (a.stop = stopa.id)
JOIN stops stopb ON (b.stop = stopb.id)
JOIN stops stopc ON (c.stop = stopc.id)
JOIN stops stopd ON (d.stop = stopd.id)
WHERE  stopa.name = 'Craiglockhart' AND stopd.name = 'Lochend'
            AND  stopb.name = stopc.name
ORDER BY b.num, stopb.id, d.num












 















     






